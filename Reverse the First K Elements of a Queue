package StringStackQueue;

public class Main {
  public static void main(String[] args) {

   /* Reverse the First K Elements of a Queue
    Problem Statement:
    You are given a queue of integers, and an integer K. Reverse the first K elements of the
    queue, keeping the order of the remaining elements the same.
    Example:
    Input:
    Queue = 10 20 30 40 50
    K = 3
    Output:
    30 20 10 40 50 */

    String q[] = {"10","20","30","40","50"};
    int k = 3;
    int n = q.length;
    if(k > n){
      System.out.println("k is invalid");
    }
    Queue queue = new Queue(n);
    Queue res = new Queue(n);
    Stack stack = new Stack(k);
    int i;
    for(i = 0; i < n; i++){
      queue.enqueue(q[i]);
    }
    for(i = 0; i < k; i++){
      stack.push(queue.poll());
    }
    for(i = 0; i < k; i++){
        res.enqueue(stack.pop());
    }
    for(i = k; i < n; i++){
      res.enqueue(queue.poll());
    }
    res.display();
  }
}
